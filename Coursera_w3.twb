<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0119.2058                               -->
<workbook source-build='2019.4.2 (20194.20.0119.2058)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_salary_data_states_corrected)' inline='true' name='federated.1es0pbj0w59c3m12q4ncn06f9nrf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='_1302613530cb30ef46530687365e64d9_salary_data_states_corrected' name='excel-direct.1ug5il60wrt8pi1da3aet00xcztk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ann/Desktop/wk3/_1302613530cb30ef46530687365e64d9_salary_data_states_corrected.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ug5il60wrt8pi1da3aet00xcztk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA10001:no:A1:AA2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='CASE_NUMBER' ordinal='0' />
            <column datatype='string' name='CASE_STATUS' ordinal='1' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='CASE_RECEIVED_DATE' ordinal='2' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='DECISION_DATE' ordinal='3' />
            <column datatype='string' name='EMPLOYER_NAME' ordinal='4' />
            <column datatype='real' name='PREVAILING_WAGE_SUBMITTED' ordinal='5' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED_UNIT' ordinal='6' />
            <column datatype='real' name='PAID_WAGE_SUBMITTED' ordinal='7' />
            <column datatype='string' name='PAID_WAGE_SUBMITTED_UNIT' ordinal='8' />
            <column datatype='string' name='JOB_TITLE' ordinal='9' />
            <column datatype='string' name='WORK_CITY' ordinal='10' />
            <column datatype='string' name='EDUCATION_LEVEL_REQUIRED' ordinal='11' />
            <column datatype='string' name='COLLEGE_MAJOR_REQUIRED' ordinal='12' />
            <column datatype='string' name='EXPERIENCE_REQUIRED_Y_N' ordinal='13' />
            <column datatype='string' name='EXPERIENCE_REQUIRED_NUM_MONTHS' ordinal='14' />
            <column datatype='string' name='COUNTRY_OF_CITIZENSHIP' ordinal='15' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_CODE' ordinal='16' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_TITLE' ordinal='17' />
            <column datatype='string' name='WORK_STATE' ordinal='18' />
            <column datatype='string' name='WORK_STATE_ABBREVIATION' ordinal='19' />
            <column datatype='string' name='WORK_POSTAL_CODE' ordinal='20' />
            <column datatype='string' name='FULL_TIME_POSITION_Y_N' ordinal='21' />
            <column datatype='string' name='VISA_CLASS' ordinal='22' />
            <column datatype='real' name='PREVAILING_WAGE_PER_YEAR' ordinal='23' />
            <column datatype='real' name='PAID_WAGE_PER_YEAR' ordinal='24' />
            <column datatype='string' name='JOB_TITLE_SUBGROUP' ordinal='25' />
            <column datatype='integer' name='order' ordinal='26' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>10</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA10001:no:A1:AA2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_NUMBER</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_NUMBER]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_NUMBER</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_STATUS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_STATUS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_STATUS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_RECEIVED_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[CASE_RECEIVED_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_RECEIVED_DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DECISION_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DECISION_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DECISION_DATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYER_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EMPLOYER_NAME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EMPLOYER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_CITY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_CITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EDUCATION_LEVEL_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EDUCATION_LEVEL_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EDUCATION_LEVEL_REQUIRED</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COLLEGE_MAJOR_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COLLEGE_MAJOR_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COLLEGE_MAJOR_REQUIRED</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_Y_N</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_NUM_MONTHS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_OF_CITIZENSHIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY_OF_CITIZENSHIP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COUNTRY_OF_CITIZENSHIP</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_CODE</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_TITLE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE_ABBREVIATION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE_ABBREVIATION]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE_ABBREVIATION</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_POSTAL_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_POSTAL_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_POSTAL_CODE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FULL_TIME_POSITION_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FULL_TIME_POSITION_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>FULL_TIME_POSITION_Y_N</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VISA_CLASS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VISA_CLASS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>VISA_CLASS</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PREVAILING_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_PER_YEAR</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAID_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_PER_YEAR</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE_SUBGROUP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE_SUBGROUP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE_SUBGROUP</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>order</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case Number' datatype='string' name='[CASE_NUMBER]' role='dimension' type='nominal' />
      <column caption='Case Received Date' datatype='date' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
      <column caption='Case Status' datatype='string' name='[CASE_STATUS]' role='dimension' type='nominal' />
      <column caption='College Major Required' datatype='string' name='[COLLEGE_MAJOR_REQUIRED]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Country Of Citizenship' datatype='string' name='[COUNTRY_OF_CITIZENSHIP]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='In top X' datatype='boolean' name='[Calculation_152348350454325249]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK([Calculation_28006779436441605])&lt;=[Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Difference Between Prevailing and Paid Wage' datatype='real' name='[Calculation_28006779416756225]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[PAID_WAGE_PER_YEAR]-[PREVAILING_WAGE_PER_YEAR]' />
      </column>
      <column aggregation='CountD' caption='Paying Less than Prevailing Wage' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_28006779418783746]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_28006779416756225]&lt;0&#10;THEN &apos;Paid less than prevailing Wage&apos;&#10;ELSE &apos;Paid prevailing Wage or Higher&apos;&#10;END' />
      </column>
      <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_28006779436441605]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.17i58x01r9zimj15ksaof09rx0y3].[Price Parity]))*100' />
      </column>
      <column caption='State we are interested in' datatype='string' name='[Calculation_4148096750767214592]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[WORK_STATE] = &apos;California&apos;&#10;or [WORK_STATE]= &apos;Washington&apos;&#10;or [WORK_STATE]= &apos;Texas&apos;&#10;or [WORK_STATE]= &apos;Alabama&apos;&#10;or [WORK_STATE]= &apos;New York&apos;&#10;or [WORK_STATE]= &apos;Texas&apos;&#10;Then &apos; View&apos;&#10;else &quot;Don&apos;t view&quot; &#10;END' />
      </column>
      <column caption='Decision Date' datatype='date' name='[DECISION_DATE]' role='dimension' type='ordinal' />
      <column caption='Education Level Required' datatype='string' name='[EDUCATION_LEVEL_REQUIRED]' role='dimension' type='nominal' />
      <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
      <column caption='Experience Required Num Months' datatype='string' name='[EXPERIENCE_REQUIRED_NUM_MONTHS]' role='dimension' type='nominal' />
      <column caption='Experience Required Y N' datatype='string' name='[EXPERIENCE_REQUIRED_Y_N]' role='dimension' type='nominal' />
      <column caption='Full Time Position Y N' datatype='string' name='[FULL_TIME_POSITION_Y_N]' role='dimension' type='nominal' />
      <column caption='Job Title' datatype='string' name='[JOB_TITLE]' role='dimension' type='nominal' />
      <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column caption='Paid Wage Submitted' datatype='real' name='[PAID_WAGE_SUBMITTED]' role='measure' type='quantitative' />
      <column caption='Paid Wage Submitted Unit' datatype='string' name='[PAID_WAGE_SUBMITTED_UNIT]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Per Year' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column caption='Prevailing Wage Soc Code' datatype='string' name='[PREVAILING_WAGE_SOC_CODE]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Soc Title' datatype='string' name='[PREVAILING_WAGE_SOC_TITLE]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Submitted' datatype='real' name='[PREVAILING_WAGE_SUBMITTED]' role='measure' type='quantitative' />
      <column caption='Prevailing Wage Submitted Unit' datatype='string' name='[PREVAILING_WAGE_SUBMITTED_UNIT]' role='dimension' type='nominal' />
      <column caption='Visa Class' datatype='string' name='[VISA_CLASS]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Work City' datatype='string' name='[WORK_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Work Postal Code' datatype='string' name='[WORK_POSTAL_CODE]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='None' caption='Work State Abbreviation' datatype='string' name='[WORK_STATE_ABBREVIATION]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Order' datatype='integer' name='[order]' role='measure' type='quantitative' />
      <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
      <group caption='Action (Job Title Subgroup,Work State)' hidden='true' name='[Action (Job Title Subgroup,Work State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[JOB_TITLE_SUBGROUP]' />
          <groupfilter function='level-members' level='[WORK_STATE]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.43833' measure-ordering='alphabetic' measure-percentage='0.518027' parameter-percentage='0.0436433' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:JOB_TITLE_SUBGROUP:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;assistant professor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;data scientist&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;data analyst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;software engineer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;business analyst&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;management consultant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;attorney&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;teacher&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.17i58x01r9zimj15ksaof09rx0y3'>
        <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_price_parity)' inline='true' name='federated.17i58x01r9zimj15ksaof09rx0y3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='_1302613530cb30ef46530687365e64d9_price_parity' name='excel-direct.008eg2i05sbv9u1exw8j70z4f48a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ann/Desktop/wk3/_1302613530cb30ef46530687365e64d9_price_parity.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.008eg2i05sbv9u1exw8j70z4f48a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B52:no:A1:B52:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Price Parity' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price Parity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price Parity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Price Parity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B52:no:A1:B52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.29562' measure-ordering='alphabetic' measure-percentage='0.44708' parameter-percentage='0.257299' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.17i58x01r9zimj15ksaof09rx0y3'>
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1es0pbj0w59c3m12q4ncn06f9nrf'>
      <column aggregation='None' caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.17i58x01r9zimj15ksaof09rx0y3' target='federated.1es0pbj0w59c3m12q4ncn06f9nrf'>
      <column-mapping>
        <map key='[federated.17i58x01r9zimj15ksaof09rx0y3].[none:State:nk]' value='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top states for data jobs' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Top states for data jobs' />
        <param name='on-empty' value='none' />
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Adjusted Paid Wage Per Subgroup'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_salary_data_states_corrected)' name='federated.1es0pbj0w59c3m12q4ncn06f9nrf' />
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_price_parity)' name='federated.17i58x01r9zimj15ksaof09rx0y3' />
          </datasources>
          <datasource-dependencies datasource='federated.17i58x01r9zimj15ksaof09rx0y3'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1es0pbj0w59c3m12q4ncn06f9nrf'>
            <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_28006779436441605]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.17i58x01r9zimj15ksaof09rx0y3].[Price Parity]))*100' />
            </column>
            <column caption='State we are interested in' datatype='string' name='[Calculation_4148096750767214592]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[WORK_STATE] = &apos;California&apos;&#10;or [WORK_STATE]= &apos;Washington&apos;&#10;or [WORK_STATE]= &apos;Texas&apos;&#10;or [WORK_STATE]= &apos;Alabama&apos;&#10;or [WORK_STATE]= &apos;New York&apos;&#10;or [WORK_STATE]= &apos;Texas&apos;&#10;Then &apos; View&apos;&#10;else &quot;Don&apos;t view&quot; &#10;END' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_4148096750767214592]' derivation='None' name='[none:Calculation_4148096750767214592:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_28006779436441605]' derivation='User' name='[rank:usr:Calculation_28006779436441605:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_28006779436441605]' derivation='User' name='[usr:Calculation_28006779436441605:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]'>
            <groupfilter function='member' level='[none:Calculation_4148096750767214592:nk]' member='&quot; View&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_28006779436441605:qk]</rows>
        <cols>([federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk] / ([federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok] / [federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]))</cols>
      </table>
      <simple-id uuid='{A2BD4131-E6AE-4E9D-8E4D-1C5AA09C0E2F}' />
    </worksheet>
    <worksheet name='Companies that Pay below Prevailing Wage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_salary_data_states_corrected)' name='federated.1es0pbj0w59c3m12q4ncn06f9nrf' />
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_price_parity)' name='federated.17i58x01r9zimj15ksaof09rx0y3' />
          </datasources>
          <datasource-dependencies datasource='federated.17i58x01r9zimj15ksaof09rx0y3'>
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1es0pbj0w59c3m12q4ncn06f9nrf'>
            <column caption='Difference Between Prevailing and Paid Wage' datatype='real' name='[Calculation_28006779416756225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PAID_WAGE_PER_YEAR]-[PREVAILING_WAGE_PER_YEAR]' />
            </column>
            <column aggregation='CountD' caption='Paying Less than Prevailing Wage' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_28006779418783746]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_28006779416756225]&lt;0&#10;THEN &apos;Paid less than prevailing Wage&apos;&#10;ELSE &apos;Paid prevailing Wage or Higher&apos;&#10;END' />
            </column>
            <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Prevailing Wage Per Year' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_28006779416756225]' derivation='Count' name='[cnt:Calculation_28006779416756225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_28006779418783746]' derivation='None' name='[none:Calculation_28006779418783746:nk]' pivot='key' type='nominal' />
            <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[cnt:Calculation_28006779416756225:qk]' included-values='in-range'>
            <min>5</min>
          </filter>
          <filter class='categorical' column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_28006779418783746:nk]'>
            <groupfilter function='member' level='[none:Calculation_28006779418783746:nk]' member='&quot;Paid less than prevailing Wage&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_28006779418783746:nk]</column>
            <column>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[cnt:Calculation_28006779416756225:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[cnt:Calculation_28006779416756225:qk]' />
              <color column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[cnt:Calculation_28006779416756225:qk]' />
              <text column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]' />
              <text column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:EMPLOYER_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <join-lod-include-overrides>
          <column>[federated.17i58x01r9zimj15ksaof09rx0y3].[State]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{03EBBB74-29EA-4C94-A9FC-32BAA59C11F4}' />
    </worksheet>
    <worksheet name='Comparison between Median Wage and Adjusted Wage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_salary_data_states_corrected)' name='federated.1es0pbj0w59c3m12q4ncn06f9nrf' />
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_price_parity)' name='federated.17i58x01r9zimj15ksaof09rx0y3' />
          </datasources>
          <datasource-dependencies datasource='federated.17i58x01r9zimj15ksaof09rx0y3'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1es0pbj0w59c3m12q4ncn06f9nrf'>
            <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_28006779436441605]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.17i58x01r9zimj15ksaof09rx0y3].[Price Parity]))*100' />
            </column>
            <column caption='State we are interested in' datatype='string' name='[Calculation_4148096750767214592]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[WORK_STATE] = &apos;California&apos;&#10;or [WORK_STATE]= &apos;Washington&apos;&#10;or [WORK_STATE]= &apos;Texas&apos;&#10;or [WORK_STATE]= &apos;Alabama&apos;&#10;or [WORK_STATE]= &apos;New York&apos;&#10;or [WORK_STATE]= &apos;Texas&apos;&#10;Then &apos; View&apos;&#10;else &quot;Don&apos;t view&quot; &#10;END' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4148096750767214592]' derivation='None' name='[none:Calculation_4148096750767214592:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_28006779436441605]' derivation='User' name='[usr:Calculation_28006779436441605:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]'>
            <groupfilter function='member' level='[none:Calculation_4148096750767214592:nk]' member='&quot; View&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[med:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_28006779436441605:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1es0pbj0w59c3m12q4ncn06f9nrf].[med:PAID_WAGE_PER_YEAR:qk] + [federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_28006779436441605:qk])</rows>
        <cols>([federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk] / [federated.17i58x01r9zimj15ksaof09rx0y3].[none:State:nk])</cols>
        <join-lod-include-overrides>
          <column>[federated.17i58x01r9zimj15ksaof09rx0y3].[State]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{D8CF77A6-EB1E-4AD6-93FA-AFDE2FC4B94F}' />
    </worksheet>
    <worksheet name='Median Wage Per Subgroup'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_salary_data_states_corrected)' name='federated.1es0pbj0w59c3m12q4ncn06f9nrf' />
          </datasources>
          <datasource-dependencies datasource='federated.1es0pbj0w59c3m12q4ncn06f9nrf'>
            <column caption='State we are interested in' datatype='string' name='[Calculation_4148096750767214592]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[WORK_STATE] = &apos;California&apos;&#10;or [WORK_STATE]= &apos;Washington&apos;&#10;or [WORK_STATE]= &apos;Texas&apos;&#10;or [WORK_STATE]= &apos;Alabama&apos;&#10;or [WORK_STATE]= &apos;New York&apos;&#10;or [WORK_STATE]= &apos;Texas&apos;&#10;Then &apos; View&apos;&#10;else &quot;Don&apos;t view&quot; &#10;END' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4148096750767214592]' derivation='None' name='[none:Calculation_4148096750767214592:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]'>
            <groupfilter function='member' level='[none:Calculation_4148096750767214592:nk]' member='&quot; View&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk] / [federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk])</cols>
      </table>
      <simple-id uuid='{36A5CFFD-16A0-43F6-881A-2AD1CB575846}' />
    </worksheet>
    <worksheet name='Top companies for data jobs'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_salary_data_states_corrected)' name='federated.1es0pbj0w59c3m12q4ncn06f9nrf' />
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_price_parity)' name='federated.17i58x01r9zimj15ksaof09rx0y3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.17i58x01r9zimj15ksaof09rx0y3'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1es0pbj0w59c3m12q4ncn06f9nrf'>
            <column caption='In top X' datatype='boolean' name='[Calculation_152348350454325249]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_28006779436441605])&lt;=[Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_28006779436441605]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.17i58x01r9zimj15ksaof09rx0y3].[Price Parity]))*100' />
            </column>
            <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_28006779436441605]' derivation='User' name='[rank:usr:Calculation_28006779436441605:ok:6]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:EMPLOYER_NAME:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_152348350454325249]' derivation='User' name='[usr:Calculation_152348350454325249:nk:8]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:EMPLOYER_NAME:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_28006779436441605]' derivation='User' name='[usr:Calculation_28006779436441605:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;assistant professor&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_152348350454325249:nk:8]'>
            <groupfilter function='member' level='[usr:Calculation_152348350454325249:nk:8]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_152348350454325249:nk:8]</column>
            <column>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:EMPLOYER_NAME:nk]' value='324' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok:6]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[cnt:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk] / ([federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk] / ([federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok:6] / [federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:EMPLOYER_NAME:nk])))</rows>
        <cols>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_28006779436441605:qk]</cols>
        <join-lod-include-overrides>
          <column>[federated.17i58x01r9zimj15ksaof09rx0y3].[State]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{E07B7F72-0A23-4DAB-A6F8-1420C464E977}' />
    </worksheet>
    <worksheet name='Top states for data jobs'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_salary_data_states_corrected)' name='federated.1es0pbj0w59c3m12q4ncn06f9nrf' />
            <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_price_parity)' name='federated.17i58x01r9zimj15ksaof09rx0y3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.17i58x01r9zimj15ksaof09rx0y3'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1es0pbj0w59c3m12q4ncn06f9nrf'>
            <column caption='In top X' datatype='boolean' name='[Calculation_152348350454325249]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_28006779436441605])&lt;=[Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_28006779436441605]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.17i58x01r9zimj15ksaof09rx0y3].[Price Parity]))*100' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_28006779436441605]' derivation='User' name='[rank:usr:Calculation_28006779436441605:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_152348350454325249]' derivation='User' name='[usr:Calculation_152348350454325249:nk:5]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_28006779436441605]' derivation='User' name='[usr:Calculation_28006779436441605:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;assistant professor&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_152348350454325249:nk:5]'>
            <groupfilter function='member' level='[usr:Calculation_152348350454325249:nk:5]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]</column>
            <column>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_152348350454325249:nk:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_28006779436441605:qk]</rows>
        <cols>([federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk] / ([federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok] / [federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]))</cols>
      </table>
      <simple-id uuid='{E38F7695-D126-4F20-9111-E6DDAB01652C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Sheet1 (_1302613530cb30ef46530687365e64d9_salary_data_states_corrected)' name='federated.1es0pbj0w59c3m12q4ncn06f9nrf' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top X' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1es0pbj0w59c3m12q4ncn06f9nrf'>
        <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
        <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='48875' id='7' param='horz' type='layout-flow' w='98400' x='800' y='50125'>
            <zone h='48875' id='3' param='horz' type='layout-flow' w='82400' x='800' y='50125'>
              <zone h='48875' id='5' name='Top companies for data jobs' w='82400' x='800' y='50125'>
                <layout-cache fixed-size-h='44' minwidth='606' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='48875' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='50125'>
              <zone fixed-size='238' h='30750' id='8' is-fixed='true' mode='dropdown' name='Top companies for data jobs' param='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' w='16000' x='83200' y='50125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='80875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49125' id='10' name='Top states for data jobs' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='15' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49125' id='10' is-fixed='true' name='Top states for data jobs' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30750' id='8' mode='dropdown' name='Top companies for data jobs' param='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' w='16000' x='83200' y='50125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48875' id='5' is-fixed='true' name='Top companies for data jobs' w='82400' x='800' y='50125'>
                  <layout-cache fixed-size-h='44' minwidth='606' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='9' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='80875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{11F90F70-12FA-4D74-B574-9D512D238721}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Median Wage Per Subgroup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50F10190-560F-43FC-B9AC-42B3D977693B}' />
    </window>
    <window class='worksheet' name='Companies that Pay below Prevailing Wage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[cnt:Calculation_28006779416756225:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_28006779418783746:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:EMPLOYER_NAME:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F395276-9ED2-4776-AD06-350C33695ED3}' />
    </window>
    <window class='worksheet' name='Comparison between Median Wage and Adjusted Wage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17i58x01r9zimj15ksaof09rx0y3].[none:State:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[:Measure Names]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BCC82BA-5186-4F61-88E7-170FF4424E62}' />
    </window>
    <window class='worksheet' name='Adjusted Paid Wage Per Subgroup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17i58x01r9zimj15ksaof09rx0y3].[none:State:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[:Measure Names]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_CITY:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5630E691-7FF8-4CB3-AB0A-622E8FB6238C}' />
    </window>
    <window class='worksheet' name='Top states for data jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17i58x01r9zimj15ksaof09rx0y3].[none:State:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[:Measure Names]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_CITY:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_152348350454325249:nk:4]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_152348350454325249:nk:5]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_152348350454325249:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E261A723-ED2E-47B7-AE8E-D1E08B04774A}' />
    </window>
    <window class='worksheet' name='Top companies for data jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:Calculation_4148096750767214592:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:EMPLOYER_NAME:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok:6]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_152348350454325249:nk:8]</field>
            <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_152348350454325249:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FBEBF6A-7781-4108-A80C-0E858C274664}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Top companies for data jobs' />
        <viewpoint name='Top states for data jobs'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]</field>
                      <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok]</field>
                      <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_28006779436441605:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:JOB_TITLE_SUBGROUP:nk]</field>
                    <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[none:WORK_STATE:nk]</field>
                    <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[usr:Calculation_28006779436441605:qk]</field>
                    <field>[federated.1es0pbj0w59c3m12q4ncn06f9nrf].[rank:usr:Calculation_28006779436441605:ok]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;data analyst&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>76627.218934911245</value>
                  <value>53</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{73D5F737-49F4-40D1-BA9F-B13AE8266713}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Adjusted Paid Wage Per Subgroup' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Companies that Pay below Prevailing Wage' width='192'>
      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
      HzE+MJ4dSxqhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Comparison between Median Wage and Adjusted Wage' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2daXAj6Xnf/92NRgONkwAIggQBkjMccu5Ds7MaryztOrtlyS7ZLkWyY39J
      yk6cVCWpfMh9qaJK5UMux1HKqVTscioVVxxFZW+SlaKUE69W0uxqdczOQWJ4DQmS4AWAOIlu
      oIG+8oHbLTa7G5yDBDnD/lVtzfJ90f0+/XY/7/m8z0OoqqrCweGUQh63AA4Ox4mjAA6nGkcB
      HE41jgI4WFIulw3/z3EcAKDVamF2dhaPHz/GxsYGWq0WOp0OcrkcFEXRr5EkCbOzs6jVanpa
      Pp+HIAjPLNPGxoYuV7FYxOPHj9FutyGKoqHcdrv9xPd0PbM0Di813/zmN/HpT38amUwGoVAI
      y8vLeOONNxCPx/H+++/j/PnzcLvdyGQyKBQKIAgCn/vc5/Dhhx/i9ddfx9zcHHK5HDweD/L5
      PBiGQSaTAc/z+MxnPoPl5WVEo1HwPA+SJJHP5zE6OgqSJMEwDGRZxuzsLK5cuYKRkREAwNTU
      FN58803Isoyvfe1ruH37NmZnZ8HzPG7duoXFxUX4fD7Mz8/jrbfeQiaTwc/8zM/A5/PZPif1
      la985Ss9qlOHFwRVVfHgwQNks1mMjY3ho48+wiuvvKL/WyqVcPHiRczNzSEajSIcDoPjOKys
      rKBSqaDVauHGjRvIZDIQBAFLS0vY2dmBIAiYmJjAd7/7XdRqNXAch48++ghDQ0MQBAGZTAal
      Ugk8z2NrawvpdBp3797F1atX0W63sbKygsnJSRAEAZfLhffffx/pdBpDQ0Not9v44IMPEI1G
      EY1GMTU1hXK5DJqmkUwmbZ/VGQI5mPjWt76FUCiEWCyGe/fuYXR0FFNTU0gkEgAAj8cDiqLg
      9XoxMDCApaUl0DSNkZERKIqCVCqFjY0NkCSJTqcDQRAwPz8Pn8+H+/fvY2JiAu12G+12G5OT
      k5icnMTi4iL8fj9kWcb09DRIksQPf/hDDA4OAoCujAAgyzLW1tZAURSSySSmpqawuLiIcDiM
      /v5+rKysIJFIgKZpDAwMdH1WwtkHcNiPKIpwuXZHx7Isg6IoqKoKkrRuL2VZBkmSIAjC8HtF
      UUCSpP4vsNu7iKKIb33rW7h27RrOnDkDYHfsrl0HALOzs4jFYojH4yAIAnfu3MEnP/lJuN1u
      /T6aTLIsgyAIAND/1sqlKKrrs/ZEAQRBgMfjOepiXhg5RFHUu/Hj5iTUiaIokCRJ/7iPmr3P
      3JMhULPZ7EUxB3JS5Oh0OpAk6bjFAHAy6kRRFLRarZ6Vt/eZnTmAw6nmxCuAM0VxOEqOfxCK
      3THZxsYG0uk0isUiAoEAOI4Dy7JoNBoIhUJoNBooFouIxWLweDwQRRHBYBClUgnhcBgzMzO4
      ceMGvF7vcT+OwwvEiegB2u02tre3MTc3h7m5OUiShEwmA0mSUKvVMDMzg06nA4qiEAwGwfM8
      Hjx4gLm5ObAsi/X1ddA03bNJlMPLw4lQgPX1dTAMA5IkMTg4iKWlJaRSKTx+/BgAMDw8jJWV
      FdA0DY7jsLGxoc/iw+EwKIqCoiiGLXEHhyfhRAyBJiYmwPM8WJbVhz6tVgujo6OgKAqiKOLm
      zZt6+vXr1yHLMjweD2iaxvj4ONrt9oFrvg4O+zkRCkDTNMLhMAAgEokAgGFteu/QJhAIWF5P
      0/QRS+nwMnIihkDdyOfzT2Xdd1goigJFUSDL8pGsRCmKAp7nbfMPa1280WiY0mRZPvA6zYQB
      2F2Je5JrDipXq1M7VFU1XPckdW9XT5q8e/OtnqEnxnCtVqvr6szq6irW19cRCASwtraGTqeD
      bDYLmqbxve99D7FYDCsrK/D7/Xj8+DE8Hg8WFxfBsixWV1chCAIEQUC5XEYoFHpmOQCgVCph
      eXkZjUYDCwsLyOfzqNfrIEkSy8vLYFkWGxsb4DgOuVwOgUAACwsLAHY/mlarBYZh9K15K0RR
      hCRJuHv3LgiCgKqqoCgKjUZDt4kpl8vY3t5GqVSC1+vF7OwsvF6v/tzZbBYURcHj8WBmZgaq
      qqJUKmFrawsMw2B+fh7BYBDz8/PweDxotVpoNBpYX1/HwsICJElCOByGIAimOqnVapiamgIA
      rK2tAQB+8IMfoK+vD0tLSyBJEizL4vHjx2g2mxAEAaurq2BZFgsLC6AoCrlcTjdt2NnZwfLy
      Mmq1GrLZLAYGBgzDVUVRwHEcstksqtUqKpUKJEnCgwcP9HfCcRxCoRAKhQLy+TwoikI2m4Wi
      KKBpGo8ePYLf78fS0hJarRbu378Pt9sNnufBcRzK5TKmpqbgcrlA07T+zCeiB6hUKggGg1he
      Xka5XMbGxgbGx8extbWFs2fPYnFxEbVaDfPz89jZ2UGj0UC1WkWz2YQkSSgUCpiZmUEsFntu
      WQRBQKFQQKfTwdDQEPr6+pBOp5HL5RCNRpHJZMBxHCqVCmKxGB4+fIhyuYz5+Xlks1msrq7a
      2szsJx6Po1AoYH19Hc1mE8vLy6jX61AUBbVaDbVaDbIsY2pqCo1GAw8fPkS9Xtdl1OxhOp0O
      ZmZmUCqVQJIkGo0GGo2G/hFqcq2vr0NVVfj9ft3E2IpsNouzZ8/qtvWrq6sYGBiA3+/Xy1JV
      Fe12GzMzM9jc3ER/fz/y+Tw6nQ5mZ2cB7DZs2WwWlUoFgiCAZVkMDw9bmoDMz8/j3LlzIAhC
      LyMSiWBwcFAvB9hVSEVRsLS0hLNnz6JarSKTyUCWZWQyGaiqimq1ikgkgkQigVqthlwuB4Ig
      EA6HdeM6jROhAJr5ayAQwPDwMBiGwcLCAkKhEGiaRigUAsMwiMfjIEkS1WoVHo8H29vbqFar
      EEUR8XgcLMs+tyyFQgEsy8LtdqNYLMLj8WBlZQXA7gsNBoNIp9PweDxgGAZ+vx+qqmJ4eBhe
      rxcMwzxxWdVqVTcaW1hYAMMw8Hq9uiUly7KgaRrBYBAkSSKZTMLlcuk9XS6XgyAIaDQacLvd
      BrlpmgZJknC5XGBZFgzDIBaLIZfLwe/3Y3l52VYuSZKQzWZRq9WgqircbjcEQcD6+jo6nQ4Y
      hoEkSahUKmAYRv+v1WpBEATQNA2KojA+Po58Po9IJIJmswlRFLG5uWlpBkLTNObm5iCKImq1
      GhiGgdvtxtraml4OAMRiMayuroKmaSwuLoIkSYTDYUiShEQiodeZ2+1GPp8HSZLo7+/H8vIy
      3G43tra2DOX2xBiuUqnok1srlpaWMDY2Zmg5NetAbSihWfhp1obav4qigCCIJ2p1D5IDMFsZ
      amVpf1u1XpoMc3NzGB0dPXCYxfM8KIqC2+3Wn0+zmJQkyXJCb/f8mgWmZo2pPYNmCamqqi6X
      x+Mx1BtFUZZ1st+SU/u9lrfX8nNvuZqc2vBmY2MDLpcL8XjcYCVKEIThGkmSwPM8fD4fXC6X
      yboUgP63oii6DHstVK3qQMvfe42iKKjX6/oz6wogiqLlxOUw4DgOfr//SO79IsrRbrdBkuSJ
      WLk6CXUiyzLa7fah9OBPwt5n1pszmqYPbB2fh6O899NwEuTQeoDjNkPWOO460XqAbgsYh432
      zCdiDuDgcFyciI2wF4HlrSoazY4hbSgWQCzUm27b4WhwFOAJ+YM/mcJHC8YVhN/8/Cfw+dcm
      jkkih8PAGQI5nGqeqQeoVCqoVqsYGRnB9PQ0YrGYvps3MjICWZZRr9eRTqcPW14Hh0PlmRTA
      7Xbru42dTgfhcBiLi4uIxWJYW1vD+vo6Ll68qK/FauvKx81BtijdsNosedbn0q570evkMGXo
      5Tey95m7KsBedxZ78fv9IEkSfr8fExMTePjwocH7lrZhAcCgBCeBZ5fD+rpnuZ92zYtfJ4cr
      Qy/l0MrqqgAffPABzp8/j3A4bNi0WVtbQ7PZRLlcRqFQwNDQEFRVRaVSwdjYGBKJBKrVKgiC
      AEVRIEnyRNjqHyTHo5VtLG9WDWmjiTAun4mDgNm4TXu+Z5HjRamTXqDt0vZKjr1ldVWASCSC
      9957DxMTE7h+/bqenkqlkEqlAED3Frafvr6+w5K3Z/zg0Tre+WDekPbzt8/h8pn4MUnkcNR0
      XQXSzHH3GxA5OLwsdFUAhmFw5syZnjotcnDoJV0VIBaLgSAIXLx4sVfyODj0lK4KsLS0hGKx
      qJ94cnB42bCdBG9vb+PChQtIpVIYHR3toUgODr3DVgGCwSA++OAD7OzsQJZlXL16tZdyOTj0
      hK49AE3T+PznP981xIyDw4uMrQIMDQ0hEonA6/V29XDg4PAiYzsJ1kLUZDIZQ6Q/B4eXia47
      walUCnNzc6AoSvfc5uBwFKgAtmtmR2HRIAuSPLoRSFcFWFlZQbPZxNramrMX4HCkdEQZv/lv
      /o8p/T//g19CX+DoXN7bDoFUVUV/fz+q1Sr6+/uPTAAHh6OiI8nghY7hv7Zo9Elk2wNsbGxg
      enoaV69exSc+8YkjF9bB4bD54+/O4mvvZgxpb1wfwV94a1L/27YH0Jwafec730Emk7H7mYPD
      C41tD3Dz5k1cuHABAE6EA6fDolDlsLxpXNUK+RlcGHGGeacRWwVwuVxoNpvIZrNIp9MYHh7u
      pVxHxv2FPP7D/7prSLt2dgD/9C/+zDFJ5HCcdF0Funfvnu4Eda8CiKKIer2OaDSKXC6HSCQC
      SZLQbDbR398PVVUhCEJPPX05vLwsb9XwD3/3XUOal3HhP/39X3rue3dVgMuXL+POnTu4efOm
      7tQUAMrlMtbX1/WYXAsLC1BVFYFAAK1WCzs7O2BZ1lEAh0NBUVU020cT/62rAmQyGQwODuLd
      d98Fx3F45ZVXAOwegywWi2i1WohGo6hWd8/RhkIhlEolLC0t4a233jJEWTkJAexkWYasmKOE
      qKoKURQtvRJowfesDmwrysHPtbRRMaXFQwzctHpi6uS45ZBl2TYCjSRJkC3cqas4uP4Ui3sq
      H0e7+dO7i1jerHZXgHg8jmw2i2vXrhnidK2traFYLCIej2N2dhaBQACiKGJ1dRVjY2OIRCJY
      XV3F9evX9QPIJ2EiTVEUKNJ88JogCN2f/n40L85W9lAk2f25ZFnB3/vd90zpX/1rbyIR9ZyY
      OjluObo5F3C5XKAsXNITIA6Um7S4J/lxWQ8Wi7gzleuuADRNg+d5KIpiMIfeeyg+Ho8bfLJr
      H9HQ0FBX4RwcTgJdFaBYLCKZTHY1htvbajpWow4vGrYKUCqV0N/fj2g0emDEEweH42KjtIP7
      C3lDWtjvwU9ffTK3nLYKoAVEe/vttzE8PIwvfvGLzyepg8MRsLRRxe99854h7dxw5PkVYGNj
      A++++y6uX7+Oz3zmM88n5RHQFiV8ML1mSn/9+gh2+DbuPza2CgztwoXk0Zxs+/DRGlpt40rF
      9fEEQr4nD5jncDzYKkB/fz9u3LiBtbU1fPvb38Yv/MIv9FKuA+FbIr76Rz80pX/qcgrr2zum
      vFiIxb/6zZ8+Eln+8/95iHyFM6R95ddfx9UzA0dSnsPhYasABEHg9u3b+OxnP3vkQvytf/9/
      sbhvvfxv/7mfwqev2ceydXA4DGwVoFwu4/HjxwCAZDJ5bAdiHjzOQ963QeUYrjkcFl0Pxd+/
      fx9vvPEGvv/97z+3AuSKddQagiFtoM+HgUj3EJ3//A/fN42vf/uvfxZh/8mIsPiisLhRQVMw
      7pym4sGu10iygpmVbVP6pbF+UE8Ql/lFwFYB3G43bt26he985zu6WfTz8EffmcF3H6wa0n7t
      zcv41TcvP/e9HQ7mP77zERbWyoa0v/krt3Elba8EXKuDL/++eSf7a//ki/AyL7kCrK2tYWtr
      CwRBoNls9lKmUw/X6pgm1QxNIRV3jAsPG1sFSKVS2Nrawvb2NgKBQC9lOvVMLxXwz//wA0Pa
      aCKMr/6NzyGzXMTDReMSb3ogjE8/4br3cXNvYQuzq8Zh1RvXR0AfkxFBV1MInueRTqfBcVy3
      nzn0kLnVEr7+3owh7VNXUi+MAjxcKuB/3pkzpF0ajWGo73jmdLYKwPM8Go0Gzp8/7xi2vSD8
      tz+dxo/nNg1pP3vrLD73yfGu133z+wsQJaPp8Bs3RrvadmU3q/idt39kSAv5GPyTX3/j6YQ+
      ZmwVYGFhQQ+DOjLirMe/CBSrPJb2xTir7Bwc3OQP/3Qa/L4VoitnBhALs7bXtDqSqazIx/57
      fjS7gT/+7qwh72yyD3/5F24eKEuvsVWAeDyO+/fvgyRJLCws4MqVK72U66WnWOXxu//7+4Y0
      F0XiKy9YC2pFjRMwlysZ0mjXyVw1slWAZDKJwcFByLJseVDE4fkQOhKms0VD2kn9SF5muk6C
      v/GNb4AgCKTTaUOUSCu0QMfHHXLTweFp6KoALMuC580OSzV4nsePfvQjjI+PY3NzE4qiIJlM
      otPpoF6v4+bNkzfmc3DYS9c+N5VKodVqQRAEy3xVVcGyLGq1GjweD86cOYN6vY4PP/wQ58+f
      h6Iou4eaZRmqYj5ULnc5cC53OXAuSRIki4PSWp7VAWv148PQR3Eo3lJ+WYZoI2O3Q+CiKNrk
      7cpoKb/ysfyW9diljrsdRpcPqOMuB9Xt6t+ujp/nUHzXsrocitfq48AgecFgEIVCwfY3sVgM
      PM9DEATkcjkEg0Hcvn0bs7OzIEly91AzRYGwcHFNdTlwTnU5cO5yueCyOCit5VkNw7SD10dx
      KN5SfooCbSMjRVG2Q0Wapm3ydmW0lJ/8WH7LeuxSx13kcFEH1HGXg+p29W9Xx13leJ6yuhyK
      1+qj6z7AtWvXsL29DYaxPtjBsiz6+/uRSqV0rWNZVm9tHRxOOrYKsLOzg3K5jHq9jsHBQcvf
      kCSJYPAnxlR7FcWZDDu8CNgOgdrtNu7cuQNRFDE3N2f3MweHFxpbBRgdHcXNmzfBcRw8Hsf2
      3uHlpOskOBqNgqIo3QmWg8PLRlcFWFlZAcdxyGazvZLHwaGndF0FSqVSEEURly87p7YcXk5s
      e4DNzU288847KJfLx+492MHhqLBVgPHxcXzpS18CSZLOEMjhpcVWAaanp/H2228jEAggHo/3
      UiYHh55hOwe4cuWKM/Z3eOnp6hnOcXfu8LLjnMBwONU4CuBwqjk0BdBOhDk4vEh0PRH2NExN
      TaHdbmNkZASiKKJWqzmTaIcTz6H2AOl0GsViEXfu3EE6/WI4anI43RyaAoiiiGq1CpZlceXK
      Fayurh58kYPDMXNoQ6Dx8XHwPI+BgQEoioJW62CHTA4Ox42uAKIootFoPNfNWJY13KNS2Y36
      wnEcBoMUro0YXXEHGQWVSgVn4x74XMY8FzqoVCq4nAqgIxqPV3YEDrzaNt0PAGq1GlSxZcoL
      sAw4joOXEk156agblUoFURamvJiPQKVSQSpCQ9qXx7okVCoVTA6yGAjs60wlAdVq1VLGjsBD
      klVTnosiUalUQFk8W3/Yi0qlgoBbNuUNhVyoVCoYsKjjkEdFpVLBmX4PvKQxj0YHHMfhcioA
      oWM8eC62OXA75roCgHqtBqXDm/L83t169JDm61JRBpVKBRGvuY4hCmjykmVZXKMOsWW+H0NT
      qFQqoNEx5SUiHlQqFYQYxZwXpHa/x5AL10aCIFQrdwGHTKVSQSQSOepiXhg5eJ4HRVEn4qDR
      SagTSZLA8zxCod64f9/7zM4+gMOp5tDmAC87i+sV1Hmjf6RUPIR439GEXnXoDY4CPCF/+KfT
      +Ghhy5D2m5//BD7/2sQxSeRwGDhDIIdTjaMADqcaZwi0h2qjhZ1m25AW8DKIBL3HJJHDUeMo
      wB7e/t4c3vlg3pD287fP4a/8ouPl+mXFGQI5nGocBXA41Zy6IdCPZjdMw5yzyQh+/ee6R8Bx
      eDk5dQpQ2WmZYnNZ+dV3OB04QyCHU42jAA6nGkcBHE41XecAS0tLWFpawsjICCYnJ3slk4PD
      kfN/f7yEx+uV7gqwuLiIYrGIdrvtKIDDC8f/+N4s/scdY3Sj166k8Cs/fQZTSwXcmcp1V4AL
      Fy6g0WhgeHgYoijaRm10cDiJCKKMOm80bWkJRk/nXRXg4cOHGB8fx927d9FqtfDaa68dvpQO
      DgBkWcF//X9TpvQ/+5kL8DJH1/B2VYCJiQlMT0/j1q1b8PmMBz9UVQVBEFAURfchqqqqZRxY
      B4eDkBQVX39vxpT+87fPHZ8ClEolFItF+P1+fO5zn9PT19bWUCqVMDExgZmZGfj9foiiqDvG
      kiQJ1WoVly5dOjLBHRwOg64KIMsyzpw5Y3JxMjw8jGq1ikKhgMnJST2ARiqVQqFQwKNHj/Bz
      P/dzUBQFiqJAluUTEWVGlmXIijmAtxbk28q1o6IoEEURVr4DFOXZnkuWZb3M4+YkvBtZlm0D
      q0uS9MzyKRb3VD4O4q69T1sF2NzcRLvdxsTEBAYGBiyFYhgGtVpNv2G9XofX68XFixextraG
      y5cvgyRJUBR1IibQFEWBIs0BvAmCAE3TlsM3kiRB07Slq3iSfLbn6nQ6J6pOjlsOgiBsA6u7
      XK5nlo+0uCf5cVna+7RVgHg8jnw+j7fffhtnz57FF77wBT2vXC4jEAggFAqhUChgfHwckiTt
      +lsZHISiKGg2m88k9MuEqqp47/6KKf3aWAQ+r/ULd+gttgqwtraGBw8e4Nq1a5iYMB78TiQS
      SCQSAAC/36+nR6NR/f9Pgs+b40ZRVHz1j35oSv/qX3sTPi9zDBI57MdWAbxeL8LhMOr1OjY3
      NzEyMtJLuRwcnojvPVzFb/33Dw1p54Yj+Nd/9Wef6HpbBYjFYvjFX/xFw3jJweE4yG5W8Xf/
      w/8zpHk9NP7gH33B5oonx1YBcrkcHjx4AK/Xi1gshlu3bj13YYeJKMmYXS2Z0i+PxUGSvVXY
      uVzJ5L90bDAM9gjXr08TKgBRNq7Q0dLhBGOxVYB0Oo2pqSmcP38eDx48eG4F2Cw1TJ7VYiEf
      +sPsM92v0ezgy7//nin961/5Ehh3b8/5/PbXf4B8hTOkfeXXX8fVMwM2VzicFGy/FEVR8Oqr
      r+LevXu4du3acxf0tW9n8N0HxpgBv/bmZfzqm04UGYfjw1YBKpUKKpUKGIZ54Xz9L6yV8W++
      bpwY9QW8+DtfunFMEjmcVGwVIJFIYHZ2FgsLCxBF8YUya2iLErbKxiGJeEhjRoeXi66Wa16v
      F+fOnTv2rXIHh6PCtgeoVqtYWVnB1atXcf78+V7K5ODQM2wVYGlpCRMTE7h//z6GhoYQDod7
      KZfDISN0JMiK0aCPoXfNMZqCiP2mfh43BeoUmLbbKsDY2BhmZ2cxMjKC7e3tI1WA3/vmPWyW
      jPHJvvj6BVweix9ZmaeNL//+e1hYKxvS/uav3MaVdBB/6V++A37fSanf+qs/i/Hh4w8nddTY
      KgDLsrh48SIAgGGO1m5lbrWExY2KIe3P3Bg90jIdHIAuClAqlfD222/j2rVr2N7exi//8i/3
      Ui6dH89tQJaNHfSVMy9+z5Ar1PF3/uP/NKTRLhJ/9E9/5ZgkOp3YKkAqlcLrr7+OxcVF03mA
      XvJb//1DtNrGEJ6//dc/i7DfsTbdz++8/SN8Z5/59ZfeuPjMm411TsBf/BfvmNL/4B9/4ZmP
      Kf6XP3mId943+mb98l/4NAbDx2Md29VmgCAIEARhOg/scDKRZcVkM6Mozx4F18oG50n49r1l
      /N437hnSLo7148t//jOQFdV0zx5E6rWlqwJUKhUUi0VHAXrM3blN/Ls/Np4jSA+E8M/+0p85
      JomeDklW0GwbJ9XtfYG4TwpdFWBwcBBXrlzB1tZWt585HDKiZPZn02h2AABTSwXc2xetcjQR
      xhvOosEzYasAjUYD3/jGNzA+Pq6f/nI4fhbWyiZvZ5+6knIU4BmxVYBAIIC33noLgiBYektw
      ON0sbVTwb/cd9wz5mBdmmKZxoF+gZrOJYDBoma+qKnZ2dnSPCp1OBz6fD+rHrieOev/A4fgQ
      RBm5Qt2QFgm8eNE0D5wDPH782PaAO8dxePToESYmJpDNZkHTNMLhMARBgCiKuHr16pEI7eBw
      WHQ19hgZGcHt27dRLBYt8ymKAsuyWF1dBcMwGBoaAsdxuHfvHs6cOQNFUSBJ0q7fIIvlOLmL
      0ym5i9MpSZIgSdarClp5+9F6paNwjGUpvyxDtJGxmyMoURRt8nZltJRf+Vh+y3rsUsfdHFLJ
      B9SxRZ6qyWhT/3Z1fJBjrGcu6wkcY9kqgKIoKBQKmJubw+XLl20rkCRJyLIMQRCwuLiIvr4+
      fOpTn8LMzAxIkoTL5do9WG9xTpfq4nSK6uJ0yuVyweWy7ry08vajOV86CsdYlvJTFGgbGSmK
      snUERdO0Td6ujJbykx/Lb1mPXeq4ixwu6oA6tsgjNBlt6t+ujrvK8TxlPY9jrM3NTdTrdXAc
      h4cPH6JareKVV14x/CYQCODSpUv6QymKogs0Ojpqd2sHhxODbQ/QarXwwQcfQJIkuN1u3Lxp
      HS1d06Zu7u0cHE4qtj3AuXPnsLa2BkEQIEmS4xvI4aWk6yT4k5/8JHw+H5LJZK/kcXDoKbY9
      wPT0NN599114PB78xm/8Ri9lcnDoGbY9wOTkJD772c/C7/djenq6lzI5OPQM2x7A7XbjwoUL
      uHDhgmMK4fDS8kSnnp24Xw4vK86X7XCqcRTA4VTjKIDDqcZRAIdTjaMADqcaRwEcTjWOAjic
      ahwFcDjVOArgcKo5NAVQVdUxmXB44Ti0cIoPHjyAKIpIp9MQRRG1Wg1Xrlw5rNs7OBwJh9YD
      EASBdDqN7e1t3Llzx4ks7/BCcGgKIIoiyuUyfD4frl27hpWVlcO6tYPDkXFoQ6CJiQk0m03E
      YjEoioJ2u33wRQ4Ox4yuAKIootFodPvtgTAMY7hHpbIb9YXjOAyHabxyts/w+z6vinK5jMlB
      FmGP0e2Km9jtUW6MhdERjf5dRIEHj7bpfgBQr9UAsWXKC3jd4DgOPpdkykvFPSiXy4j7CVPe
      QIBEuVzGaD8DQjbm+WkZ5XIZl4b9GO4zunAhZWHXk4aFjB2hCVlRTXkuarcsGidf120AABJl
      SURBVB1TXizEolwuI+QxX5fqc6NcLmPIoo4jLFAulzGR8CLoNuYxhAiO43BjLAShY6xjqc2D
      a4jWdVyvQe00TXk+L41yuQyWMtfxcP9uHff7zHVMSAKavPkaAOAaO5AEc324aQrlchkMYc4b
      6Nutq4jXXFfJML37Pfbt1hWh9sA5e6VSQSSyG29KK047ZC9Jku5/RlVVw+F7uzxFUaCqqu6F
      Ym+e5qtI+3tv3tPI8ax5e8uVZdkyj+d5UBSle9zbm7f3ft3yDkNGqzp53jp+Uvn3IkkSeJ5H
      KBSyLIsgCP1MymHU1d5nPrQh0JOy37vE3r8Pytv/IE97j8OSA/hJZXe7bu9Bom5eNZ627KeV
      o1ve88qh/W0lx9OU3e0aq+/gacrqVm7PFeDRo0eoVqs4c+YMhoaG9BZGkiRkMhlwHIdLly6h
      r69Pz+t0OlhZWYEsyzh79izcbrf+UNvb2xAEAfl8Hq+88orho8vlcmi1WvD5fBgeHjbIsbKy
      gnw+j3A4jPPnzxt8Gs3Pz6NcLiOZTGJkZMSQ9/jxYyiKgsHBQQSDQT2v1WqhXC4jn8/j7Nmz
      6OvrM7Q4W1tb8Hq9ptWxUqmE+fl5sCyLGzduGMpaX1/H2toagsEgLl26ZMjb2NhAs9mEz+cz
      1CMArK2t6a1cKpUy1PGjR4/AsixSqZTB52ur1cL09DQURcG1a9fg9Xp1+Wu1GjKZDLxeL27c
      uGGo42q1ilKpBIIgMD4+bpKj3W5DkiRTHc/MzMDtdiOdThvut7Ozg+npaTAMg+vXrxta+Hq9
      jmKxCFVVMTExYaqrdruNdruNixcvGvJmZ2dBURSi0Sii0aih/nu+ExwIBBAKhUyTZFVVEY1G
      4fP50Gq19HRJkpDL5cBxHCRJMh3PdLvd+se6H62lsHLYRZIkYrGYpW9Jr9eLcDhs8E2qqipy
      uRwURUG5XDbdk6J2x6SpVMoko+Y+0uVymVojSZIwODhoGyYoHo+bNhiLxSI4jkOxWITb7TZd
      02g0EI/HLfPs5BBFEQMDA3C73SafrJ1OB0NDQ5blbG9vY3t727IsRVHgcrkQCARMedoQZb8c
      nU4HyWQSBEEYnpvneRQKBduytHetDaP2P7OdG8WeK4CiKGAYBrFYzJDearVAEASCwaBBS10u
      F4aGhpBIJHDlyhXTGJIgCLRaLUsHvnYfOAC9EvfL0Wg04PF44PF40N/fbygnnU7D5XLhp37q
      p0xho7SueWVlxSRjIBAAwzCWzmZZloUsy/qYVIPnefj9fpAkaZADgP5x37592yQ/sKuMKysr
      JqWiKAqRSATtdtukpB6PB6IoIhgMwuv9iZtz7ePRGoy9H2wgEEAgEMC1a9eQTqct5SgWi+B5
      3pQ3MDAAURQNcqiqqs8totGooR59Ph/C4TAuX75s6XaToiiUSiVwHGdZliAI1v5dTSlHTK1W
      g8/nM2kjy7J6BeyHpmlsb29jcXHR9BHxPI/+/n5LM4x8Po/R0VHUajVTXrVahdfrNcUwYFkW
      gHnsqdFutzE/P296qZ1OB+FwGB6PB81m05C3vb2N/v5+EARh6vnq9TpcLpderobH49HLt6uT
      2dlZlEolUx7DMAgEAiYZRVGEJEkYHh42hb1qtVoQRRE+n89QHkmS8Hq9UBTFUg6v14vFxUWs
      ra2Z8iRJQiQSsfTyXa1WEQqFUK1WDek+n0+fZO/H4/Egm81idXXVlCeKom1Z5XIZ4+PjKBQK
      pryezwFIkoTP5zO1krIso9lsYmhoyJQniiJcLpc+ntybHwqFbOMXxONxfQy9H1VV4fP5TAqg
      tSSpVMoywIeqqlBVVZ9baDAMA5ZlQZKkqcuPRCJYXV0FRVFwu90QBMHw3D6fz9DqanIUi0Xb
      oUyn0wFN0+B53tQLeL1eeL1ek3dtzav21tYWUqmUIU9RFHg8HrAsa5pAlkolBAIBk4zAboPA
      MIxlK+/3++FyuSxb5XA4jEajYZCDIAh9M9Xn85kaoG5lBQIBkCRpuZQfiUSQzWYRj5vjS/e8
      B2BZFsVi0fARALsvRxRFbG1tmbRYURTQNA2Xy2Vq6SmKQiaTQafTMV2zuLgIr9er70fsJRQK
      oVgsYmdnx5SnfSRWFa2qKrxer2loRZIk1tfXkc/nTR/e8vIySJJEs9k0PVtfXx9KpZKljF6v
      F1tbW6ZWEviJ4lgN8RqNBubn500NQ61WQ6VSAU3TpvK0udf29rbpnsFgEIVCwXKYKUkSvF6v
      7Rzm7t27poZEEATkcjnIsmyq42AwiGKxiEKhYLqnVpYdH330kanxbLfbWFlZgc/ns+wte94D
      CMLuBpHP5zO0zKqqQpIkpNNp0wdULpeRSCTAMIypMlVVRSKRMLXyBEGgv78fqqrq4829dDod
      lEolSJJkCgSuTfr2D0s2NzeRSqVA07TpRaiqikgkAoZh0Ol0DPnRaBQcxyEajZpeaqfTQblc
      RqvVMq0QiaKIUChkmthVq1WEw2F4vV7LELYsy2J8fBztdtvwDF6vF8FgUJ+Y7pVFkiTs7OxA
      VVUMDQ0Z3oE2D9g/F9EWKyKRiGmVDdhtFKwcq7lcLsRiMTAMY+rdtIlzPB439ADtdhuyLCMa
      jVqWRRAEJicnTUMnrSxNzv2y9LwHCIVCCAaDpg+SJEmEQiEUCgVTC9TX14cHDx5gZWXFdF25
      XAbP86jXjfGqCIKAIAhwuVxYXV01jRtdLpeuIPuJxWIoFoumXqW/vx/T09NYXl42tVytVgs8
      z6PRaJh6FVEUQRAEtra2sLi4aMhTFAXJZNJSjmg0ilqtZiorFAohn89jbm7OslWr1+toNBqm
      noOiKLRaLTQaDWQyGUOZsizrH/7+eZYW923//TweD2RZxvT0NNbX101ylEoly3fjcrnA8zwq
      lQpmZ2cNedrya6VSMcinLX1PTU3ZlsVxnKksiqLQbDZBEASy2axp7nNsq0D7x2OSJKHVaoFh
      GFP3XCqV8Oqrr2JyctLQMimKgr6+PjAMY9kS9vf3o1arIZFImFpR7eXtb/2B3RY2GAyaPq5i
      sYirV6/i4sWL8Pv9hjyKovS0/WPyWCyGZrOJQCBgKs/v96PdblvKUSqVEAqFTHLUajXE43Hc
      vHnT1CoLgoBYLAZJkkxLl1rPpSgKxsbGDC2s1+tFq9VCOBw2PVulUgHLsqjX64aPUhvG3r59
      29R7CYKAwcFBiKJokhHYbY1pmja15rVaDR6PBxzHGRrCTqcDURRx+/Zt0ypQu93G4OAgFEWx
      XBWLRCJoNBoYGRkx9eo9VQBRFNFsNjEyMmLQxL3LXzzPmyaRo6Ojhp1gjXa7jenpaXg8HstV
      oEajoa/m7H0JkiShVCphbGwM5XLZcI2moDs7OyalSiaTcLvdlq311NQUFEWB2+029WA8z+vR
      c/Yu8SqKgnw+j+HhYVMrrygKWJbFzs6OabgViUTQ19dnOf6fm5sDx3FgWdbUkmsLDW63G+Fw
      2LCbXC6XEQqF4PP5DK2otljAcZwp1JLX68Xg4KAh5pbGysoKSqWSvsy7n52dHbhcLsPyr6qq
      YFlWNxXZO5xhGAbDw8O6icZecrkcCoWC5dwM2P0OSJIERVHo6/uJbZAoir2dA2gTsFwuZ2id
      ZFlGJpMBsLtys38OoCiKPsF85ZVX9HmA9mFbbdIAPxk37ofjODAMg9XVVYTDYUPe/Pw8OI5D
      Mpk0tRbAbqucy+UwOTlp+JjD4bAux/6JmKIoEATBNCnV1uO1XeK9rK6uYnt723IuAuy+1NXV
      VYRCIZw9e1ZPZ1nWVg4AaDabJjk06912uw2CIAytaK1Ww8zMDIaHhy1X27Rd+na7jU984hN6
      urZ/A1gv41qF3200GpiamkIymTTsRO8vi+d53Lp1y1DWwMCASWn2lmU1QiiXy71VgIGBAWxs
      bIDjOLjdbr2ld7lcOH/+PGq1Gvx+v2mPQJIkbG5uYnh42KAcHo8HZ86csSyr3W6jv78fjUbD
      NHEOh8PI5/Mol8sQBMEw/JiYmEChUEAwGLRcftzY2NDnMXuZnJy0fW6KojA4OGgwIAN2W1CX
      y4VcLgeWZQ3DiNHRUXg8Hn0pcT+lUgmyLCORSBjSJyYmbOVot9sYGxsz7ahTFIVQKIRMJgOC
      IAyNUDgc1oeeVnJwHIdarWZ6/vHxcVs5ms0mxsbGIAiCQY5AIIALFy7sBhi0COzXbDZRqVRM
      zzg2Nta1rNHRUb3n20sikej9HCCVSiEej5tak1arhVarhc3NTdNEl6IoJBIJfR/gSbCrRI1o
      NIp0Om1qXbV15M3NTctl0Hg8DpIkDeYaB8EwjK0cwWAQ586dM/UAjUYDbrfbdhk0HA4jEAhY
      LuPaYR+BclfGc+fOIRAIGD50bchRKBQsN5K8Xi+i0ehTyaHtR1jViaIoKBaLyOfzpqGOZkHw
      LGXZ0VMFWF9fR7Va1TfDNBRFQb1et40LrKqq3mU+6cF7l8uFtbU1g0mvRrlcRrVaRavVMs03
      Wq2W5caNhizLYBjG1sTCCq2s/XI0m00UCgVwHGeSQ7M5skOSpK7hRe1YX183fXySJGF9fR21
      Ws20gSZJkqUCasiyjE6nYznEsMPtdiObzVr29N3K0oaSVrZFB5VlpXDr6+u9VYBkMqmvUOzV
      bpIkkUqlIIoiqtWqSRFarRYkSUI+n3/iHqDRaKDVaqFer5ta8kgkgmQyaTmhGhwcBE3TqNVq
      JpMGYHd1o1AoWOZZoTkI2NnZ0dfZNViWxejoKCiKMilUOBxGKBTCzs6O5e4mz/Oo1WqmZT87
      FEXBxsaG3tjsrUeXy4WxsTHLiTPDMEgmk6hWq5ZycByHVqtluRxrRz6f1+XY26DRNI1UKoVa
      rYZGo2F6NxzHod1u2wZut0JbVq/X6yYzlGQy2VsFyGQyWF9fh6qqpjG0LMtgWRYej8f0UgVB
      QDAY7Gr2sJ9AIIDBwUEEAgHT/TY2NjA1NWUa/2uoqgq/329SHG0Dr6+vz2S8ZgdN07ox387O
      juFD53ke3//+91Gr1Swn8q1WC6FQyLQfwfO8Pj+wWvazQmtkhoaG0Gw2TUO4999/H6VSCX19
      faZFiHq9rm8i7f0oNWO2UChkWF05iEQigUgkAp7nTc9Wr9f1DcO9daUp5tOWNTAwgMHBQRAE
      YerZp6ene6sAly5dwsjIiKXNBs/zSKfTSKfTppUZzVBu/zr0QYiiiJ2dHdO6djKZxNWrV3Wz
      jL3UajWk02mMjo6aPnKPxwOKorCzs/PEPZHG+vq6aeONZVndonP/Bk2j0cDg4CBGR0dNHzlN
      02AYxvJDPojNzU3E43FTL/vaa68hkUigVqsZ8jSTi7GxMdPurGYo1+l0nvo4rWbEuLceVVUF
      wzAYHR3VV3X2lsWyrP5On4Z6vW4Zpf7y5cu9VQCttbhw4YLJDGJra0tf69/fYk9NTaHdbu/O
      2p8iXJO2ubP/IyEIAj6fDxMTE6YeoFgs6paP+61Is9ksCoWCPkx6UrRJ8P5zBARBwOPxYGRk
      xLSSUavVIAgCKIoyjYs1y9hoNGpS7m5oH+z6+rpp8k/TNBKJhGmzUZZlFAoFUBRlaoC0QzTa
      RPhp8Hg8yOfzhhU67TsgSdK0ESYIAqampixN6Q/C5/NZzqdIkuy9LZAVBEEgmUxiYWFBbwH2
      cv36dSiKYmuibEej0bA8fNONdDqNlZUV3f5/L2fPntVbx24rC/up1+sIhUIQBMF2or+fZDKJ
      lZUVbG1tmXZL4/G43oBYLdXaIUmSvmlYrVafaDJJ0zT8fj/m5uZM5wG8Xi9u3rxpudBwENow
      jud5vccnCAKRSARzc3OmoZjH43nmskRRRCAQsJy39fxQfK8QBAGlUkm3bw+FQsciB7C7UxkI
      BHRjrmazaTgU3ys0S1VNDoqijqVOqtUqOp0OSJJENBqFoiiGQ/GHidaT0jQNlmV162DtmV9a
      57ia5Wg2m8Xjx4+PVZZwOIyNjQ1kMpmnnjscthzVahXT09Ndl3qPmkAggFarhUwmYzKLP2z8
      fj8kScLc3Bw2NzdN+SdiCHQUcByHR48eIZlMWh6h6yUPHjxAMBjE7du34XK5TCsfvWJ+fh7N
      ZhO3bt16qrX0w2Z9fR2bm5t49dVXbe13DoutrS0sLy/j3LlzJ+NATK/w+XyYnJxEvV7X7YyO
      i8uXL4MkSfz4xz8+0pd9EOPj4+jr68O9e/ee2wna8zA0NISBgQHcvXv3yHuARCKBVCqFbDaL
      XC5nyn9pewBRFPVJ2tNMnI8CSZJw5coVXY7jchspCALGx8dx/vz5Yylfo9VqIZlM6kZ8Rzks
      bLVaSCQStvZC/x981oPuZ9/tLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      +YRCocDAwAAAExMTfP/73+fWrVv88Ic/5OOPP+b69eskk0m8Xi+//vWv+aM/+iNSqRRer5dA
      IMD777/PxYsXefPNNzdtA1hYWKBUKlEsFunr6+PJkydcvnwZwzC4efMmhmG8ULivw8ljRwPo
      drtUq1VkWRYVoe1AN/s7SZKo1+sYhoEsy3g8HgKBgIiANAyD9fV1Hj58SDKZFJF54XB4U2aQ
      ZVmMjY0xPDzMH//xH/Puu+9uaotlWSLsOZlMinRM0zRptVrU63U+/PBDrly5gt/vx7IsisXi
      pm02Ho+HdrtNrVZDlmV0XadYLDI+Ps7LL7/Mz3/+84O4rw4nBetrFItFy7IsK5vNWnfu3LFM
      07R++tOfWvfu3RP7rK2tWXfv3rW63a5148YNq16vW6VSSRxfKpWsZrNp/e3f/q319OlTq9vt
      Wp9++qm1tLRkVSoVS9d1q1QqWa1Wy2q321Y+n7du375tqapq3bx508pms5ZlWVaj0bBUVbWa
      zaZ148YNS1VVcR3LsixVVa0bN25YKysrVrFYtG7dumWtr69biqJYn3322aZtlmVZ//RP/2Qp
      imLNzc1ZDx48sHRdt27fvm0tLi5a7XbbunHjxqbzO5x+duUJLpfLex4a2EkURxGrvxPT09Nc
      vHjxqJvhcIxwQiEczjSOH8DhTOMYgMOZxjEAhzONYwAOZxrHABzONI4BOJxpdlUZzupBjUvr
      32py2pXIXpTt6k7a5/86O23f6Tx7Od76t5KH9vd2VbXjvGLi//v4Poqx+3dhOh7i+6+c23NZ
      fF3X91VKfz/H7faYLXsoisLy8jKRSAS32y0CyAzDEFW4gsEggUCAtbU1dF1neHiYZDK57QXm
      5+fFw67rOj6fT4RNPH36lIGBAfx+P91uVxSTKhQKnD9/XoQ6JBKJHc9/FJXhThuZuA9T8u56
      /3Rio7zjXgvd7rc47n6O2+0xWxxhq6urzMzMMDo6SqfTEd5cSZIwTZNgMEilUkFRFDKZDHNz
      c3zve9/b8Y3Y6XS4ffs2hmEwOTnJysoKmUwGwzAIBALMzc1x7tw5YCP82e124/F4RJFc+0eM
      j4/v+CNqtRpra2sMDw+jKArlcpnBwUHq9TqNRoNYLIaiKFiWxdDQEJqmicW97ZqdrVaLTCZD
      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
      bOCgqt79f0sNv/NPxv+KAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Median Wage Per Subgroup' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top companies for data jobs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top states for data jobs' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
